ARG UBUNTU_IMAGE
FROM ${RUNDECK_IMAGE:-ubuntu:20.04}

# Container support
USER root
WORKDIR /root

ENV DEBIAN_FRONTEND=noninteractive
RUN apt update && apt install -y \
  curl \
  dnsutils \
  git \
  iputils-ping \
  mtr \
  mysql-client \
  nmap \
  postgresql-client \
  python3 \
  software-properties-common \  
  telnet \
  tree \
  unzip \
  vim \
  wget \
  zip \
  zstd

# Add mongo repository
RUN wget -qO - https://www.mongodb.org/static/pgp/server-4.4.asc | apt-key add -
RUN echo "deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu focal/mongodb-org/4.4 multiverse" | tee /etc/apt/sources.list.d/mongodb-org-4.4.list

RUN apt update && apt install -y mongodb-org

# Add universe repository for python3-pip
RUN add-apt-repository universe
# Add Ansible Repository to install latest Ansible
RUN add-apt-repository ppa:ansible/ansible
RUN apt update && apt install -y \
  python3-pip \
  ansible \
  && rm -rf /var/lib/apt/lists/*

# Install awscli v2 and boto3

RUN curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip" \
  && unzip awscliv2.zip \
  && ./aws/install \
  && rm -rf aws awscliv2.zip \
  && /usr/bin/pip3 install boto3

# Install asdf
RUN git clone https://github.com/asdf-vm/asdf.git /opt/asdf
RUN echo "export ASDF_DATA_DIR=/opt/asdf" >> /etc/bash.bashrc
RUN echo "export PATH=\$PATH:/opt/asdf/bin:/opt/asdf/shims" >> /etc/bash.bashrc
RUN echo "export PATH=\"${KREW_ROOT:-$HOME/.krew}/bin:$PATH\""  >> /etc/bash.bashrc
RUN echo "export ASDF_DATA_DIR=/opt/asdf" >> /etc/profile
RUN echo "export PATH=\$PATH:/opt/asdf/bin:/opt/asdf/shims" >> /etc/profile
RUN echo "export PATH=\"${KREW_ROOT:-$HOME/.krew}/bin:$PATH\""  >> /etc/profile

RUN export PATH=$PATH:/opt/asdf/bin:/opt/asdf/shims; export ASDF_DATA_DIR=/opt/asdf ;\
  asdf plugin-add terraform \
  && asdf plugin-add helm \
  && asdf plugin-add kubectl \
  && asdf plugin-add k9s \
  && asdf install kubectl 1.19.9 \
  && asdf install kubectl 1.20.11 \
  && asdf install kubectl 1.21.5 \
  && asdf install kubectl 1.22.2 \
  && asdf install kubectl 1.24.0 \
  && asdf install k9s 0.25.7 \
  && asdf install helm 3.1.3 \
  && asdf install helm 3.4.2 \
  && asdf install helm 3.5.3 \
  && asdf install helm 3.6.3 \
  && asdf install helm 3.7.1 \
  && asdf install terraform 0.14.11 \
  && asdf install terraform 1.1.9 \
  && asdf global helm 3.6.3 \
  && asdf global kubectl 1.24.0 \
  && asdf global terraform 1.1.9

# Install kubectl krew

RUN ( \
  set -x; cd "$(mktemp -d)" && \
  OS="$(uname | tr '[:upper:]' '[:lower:]')" && \
  ARCH="$(uname -m | sed -e 's/x86_64/amd64/' -e 's/\(arm\)\(64\)\?.*/\1\2/' -e 's/aarch64$/arm64/')" && \
  KREW="krew-${OS}_${ARCH}" && \
  curl -fsSLO "https://github.com/kubernetes-sigs/krew/releases/latest/download/${KREW}.tar.gz" && \
  tar zxvf "${KREW}.tar.gz" -C /opt && \
  /opt/"${KREW}" install krew \
) 

# Install oci client
# Install OCI cli utilities
RUN curl https://raw.githubusercontent.com/oracle/oci-cli/master/scripts/install/install.sh -o install.sh \
  && bash install.sh --accept-all-defaults

# ENV OCI_CLI_AUTH=security_token
# ENV OCI_CLI_REGION=us-ashburn-1
# ENV OCI_CLI_PROFILE=esi-azuread

CMD ["/bin/sleep", "3650d"]
